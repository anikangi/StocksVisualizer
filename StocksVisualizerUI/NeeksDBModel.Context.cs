//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StocksVisualizerUI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NeeksDBEntities : DbContext
    {
        public NeeksDBEntities()
            : base("name=NeeksDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Sector> Sectors { get; set; }
        public virtual DbSet<Exchange> Exchanges { get; set; }
        public virtual DbSet<HistoricalData> HistoricalDatas { get; set; }
        public virtual DbSet<MarketCapitalization> MarketCapitalizations { get; set; }
        public virtual DbSet<MEXSector> MEXSectors { get; set; }
        public virtual DbSet<MEXSectorData> MEXSectorDatas { get; set; }
        public virtual DbSet<SectorData_V> SectorData_V { get; set; }
        public virtual DbSet<LastUpdatedMinData_V> LastUpdatedMinData_V { get; set; }
        public virtual DbSet<MinuteDataTester> MinuteDataTesters { get; set; }
        public virtual DbSet<LastUpdatedMinData_VTester> LastUpdatedMinData_VTester { get; set; }
        public virtual DbSet<MinuteData> MinuteDatas { get; set; }
        public virtual DbSet<Holiday> Holidays { get; set; }
        public virtual DbSet<Stock> Stocks { get; set; }
        public virtual DbSet<SampleStat> SampleStats { get; set; }
        public virtual DbSet<Stocks_V> Stocks_V { get; set; }
    
        public virtual ObjectResult<GetValuesGroupedBySector_sp_Result> GetValuesGroupedBySector_sp(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetValuesGroupedBySector_sp_Result>("GetValuesGroupedBySector_sp", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetDateRange_Period(Nullable<int> period, Nullable<long> stockid)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(int));
    
            var stockidParameter = stockid.HasValue ?
                new ObjectParameter("stockid", stockid) :
                new ObjectParameter("stockid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetDateRange_Period", periodParameter, stockidParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetDateRange_StartEnd(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, Nullable<long> stockid)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var stockidParameter = stockid.HasValue ?
                new ObjectParameter("stockid", stockid) :
                new ObjectParameter("stockid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetDateRange_StartEnd", start_dateParameter, end_dateParameter, stockidParameter);
        }
    }
}
